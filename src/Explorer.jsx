// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.1.4 ../public/explorer-idle.glb
// */

// import React, { useRef, useEffect } from 'react'
// import { useGLTF, useAnimations } from '@react-three/drei'

// export function Model(props) {
//   const group = useRef()
//   const { nodes, materials, animations } = useGLTF('/explorer.glb')
//   const { actions } = useAnimations(animations, group)
//   const handleAnimation = (animationName) => {
//     var from = animationName === "talk" ? 'Armature|mixamo.com|Layer0.005' : 'Armature|mixamo.com|Layer0';
//     var to = animationName === "talk" ? 'Armature|mixamo.com|Layer0' : 'Armature|mixamo.com|Layer0.004';
//     if (actions[from].isRunning()) {
//       actions[from].fadeOut(0.3);
//     }
//     actions[to].reset().fadeIn(0.3).play();
//   };
//   useEffect(() => {
//     handleAnimation(props.animationName);
//   }, [props.animationName]);
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Scene">
//         <group name="Armature">
//           <primitive object={nodes.Hips} />
//           <skinnedMesh name="Wolf3D_Body" geometry={nodes.Wolf3D_Body.geometry} material={materials['Wolf3D_Body.011']} skeleton={nodes.Wolf3D_Body.skeleton} />
//           <skinnedMesh name="Wolf3D_Glasses" geometry={nodes.Wolf3D_Glasses.geometry} material={materials['Wolf3D_Glasses.006']} skeleton={nodes.Wolf3D_Glasses.skeleton} />
//           <skinnedMesh name="Wolf3D_Headwear" geometry={nodes.Wolf3D_Headwear.geometry} material={materials['Wolf3D_Headwear.011']} skeleton={nodes.Wolf3D_Headwear.skeleton} />
//           <skinnedMesh name="Wolf3D_Outfit_Bottom" geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials['Wolf3D_Outfit_Bottom.011']} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
//           <skinnedMesh name="Wolf3D_Outfit_Footwear" geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials['Wolf3D_Outfit_Footwear.011']} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
//           <skinnedMesh name="Wolf3D_Outfit_Top" geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials['Wolf3D_Outfit_Top.011']} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
//           <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials['Wolf3D_Eye.011']} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
//           <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials['Wolf3D_Eye.011']} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
//           <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials['Wolf3D_Skin.011']} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
//           <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials['Wolf3D_Teeth.011']} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
//         </group>
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/explorer-idle.glb')




/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// import React, { useRef ,useCallback,useEffect} from 'react'
// import { useGLTF, useAnimations } from '@react-three/drei'

// export function Model(props) {
//   const group = useRef()
//   const { nodes, materials, animations } = useGLTF('/adityafinalone.glb')
//   const { actions } = useAnimations(animations, group)
//   const handleAnimation = useCallback((animationName) => {
//     if (!actions) return; // Ensure actions are available
//     console.log("Animation name:", animationName);
//     // Define animation names according to your GLB file
//     const from = animationName === 'talk' ? 'Armature|mixamo.com|Layer0.005' : 'Armature|mixamo.com|Layer0';
//     const to = animationName === 'talk' ? 'Armature|mixamo.com|Layer0' : 'Armature|mixamo.com|Layer0.004';

//     // Check if actions exist and the specified animation is running
//     if (actions[from] && actions[from].isRunning()) {
//       actions[from].fadeOut(0.3);
//     }

//     // Reset, fade in, and play the target animation
//     if (actions[to]) {
//       actions[to].reset().fadeIn(0.5).play();
//     } else {
//       console.log(`Animation ${to} not found`);
//     }
// }, [actions]);

  
//   useEffect(() => {
//     handleAnimation(props.animationName);
//   }, [props.animationName, handleAnimation]);
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Scene">
//         <group name="Armature001">
//           <skinnedMesh
//             name="EyeLeft001"
//             geometry={nodes.EyeLeft001.geometry}
//             material={materials.Wolf3D_Eye}
//             skeleton={nodes.EyeLeft001.skeleton}
//             morphTargetDictionary={nodes.EyeLeft001.morphTargetDictionary}
//             morphTargetInfluences={nodes.EyeLeft001.morphTargetInfluences}
//           />
//           <skinnedMesh
//             name="EyeRight001"
//             geometry={nodes.EyeRight001.geometry}
//             material={materials.Wolf3D_Eye}
//             skeleton={nodes.EyeRight001.skeleton}
//             morphTargetDictionary={nodes.EyeRight001.morphTargetDictionary}
//             morphTargetInfluences={nodes.EyeRight001.morphTargetInfluences}
//           />
//           <skinnedMesh
//             name="Wolf3D_Body001"
//             geometry={nodes.Wolf3D_Body001.geometry}
//             material={materials.Wolf3D_Body}
//             skeleton={nodes.Wolf3D_Body001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Glasses001"
//             geometry={nodes.Wolf3D_Glasses001.geometry}
//             material={materials.Wolf3D_Glasses}
//             skeleton={nodes.Wolf3D_Glasses001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Hair001"
//             geometry={nodes.Wolf3D_Hair001.geometry}
//             material={materials.Wolf3D_Hair}
//             skeleton={nodes.Wolf3D_Hair001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Head001"
//             geometry={nodes.Wolf3D_Head001.geometry}
//             material={materials.Wolf3D_Skin}
//             skeleton={nodes.Wolf3D_Head001.skeleton}
//             morphTargetDictionary={nodes.Wolf3D_Head001.morphTargetDictionary}
//             morphTargetInfluences={nodes.Wolf3D_Head001.morphTargetInfluences}
//           />
//           <skinnedMesh
//             name="Wolf3D_Outfit_Bottom001"
//             geometry={nodes.Wolf3D_Outfit_Bottom001.geometry}
//             material={materials.Wolf3D_Outfit_Bottom}
//             skeleton={nodes.Wolf3D_Outfit_Bottom001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Outfit_Footwear001"
//             geometry={nodes.Wolf3D_Outfit_Footwear001.geometry}
//             material={materials.Wolf3D_Outfit_Footwear}
//             skeleton={nodes.Wolf3D_Outfit_Footwear001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Outfit_Top001"
//             geometry={nodes.Wolf3D_Outfit_Top001.geometry}
//             material={materials.Wolf3D_Outfit_Top}
//             skeleton={nodes.Wolf3D_Outfit_Top001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Teeth001"
//             geometry={nodes.Wolf3D_Teeth001.geometry}
//             material={materials.Wolf3D_Teeth}
//             skeleton={nodes.Wolf3D_Teeth001.skeleton}
//             morphTargetDictionary={nodes.Wolf3D_Teeth001.morphTargetDictionary}
//             morphTargetInfluences={nodes.Wolf3D_Teeth001.morphTargetInfluences}
//           />
//           <primitive object={nodes.Hips} />
//         </group>
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/adityafinalone.glb')


/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// import React, { useRef,useCallback,useEffect } from 'react'
// import { useGLTF, useAnimations } from '@react-three/drei'

// export function Model(props) {
//   const group = useRef()
//   const { nodes, materials, animations } = useGLTF('/17.glb')
//   const { actions } = useAnimations(animations, group)
//   const handleAnimation = useCallback((animationName) => {
//     if (!actions) return; // Ensure actions are available
//     console.log("Animation name:", animationName);
//     // Define animation names according to your GLB file
//     const from = animationName === 'talk' ? 'Armature|mixamo.com|Layer0.005' : 'Armature|mixamo.com|Layer0';
//     const to = animationName === 'talk' ? 'Armature|mixamo.com|Layer0' : 'Armature|mixamo.com|Layer0.004';

//     // Check if actions exist and the specified animation is running
//     if (actions[from] && actions[from].isRunning()) {
//       actions[from].fadeOut(0.3);
//     }

//     // Reset, fade in, and play the target animation
//     if (actions[to]) {
//       actions[to].reset().fadeIn(0.5).play();
//     } else {
//       console.log(`Animation ${to} not found`);
//     }
// }, [actions]);

  
//   useEffect(() => {
//     handleAnimation(props.animationName);
//   }, [props.animationName, handleAnimation]);
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Scene">
//         <group name="Armature001">
//           <skinnedMesh
//             name="EyeLeft001"
//             geometry={nodes.EyeLeft001.geometry}
//             material={materials.Wolf3D_Eye}
//             skeleton={nodes.EyeLeft001.skeleton}
//             morphTargetDictionary={nodes.EyeLeft001.morphTargetDictionary}
//             morphTargetInfluences={nodes.EyeLeft001.morphTargetInfluences}
//           />
//           <skinnedMesh
//             name="EyeRight001"
//             geometry={nodes.EyeRight001.geometry}
//             material={materials.Wolf3D_Eye}
//             skeleton={nodes.EyeRight001.skeleton}
//             morphTargetDictionary={nodes.EyeRight001.morphTargetDictionary}
//             morphTargetInfluences={nodes.EyeRight001.morphTargetInfluences}
//           />
//           <skinnedMesh
//             name="Wolf3D_Body001"
//             geometry={nodes.Wolf3D_Body001.geometry}
//             material={materials.Wolf3D_Body}
//             skeleton={nodes.Wolf3D_Body001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Glasses001"
//             geometry={nodes.Wolf3D_Glasses001.geometry}
//             material={materials.Wolf3D_Glasses}
//             skeleton={nodes.Wolf3D_Glasses001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Hair001"
//             geometry={nodes.Wolf3D_Hair001.geometry}
//             material={materials.Wolf3D_Hair}
//             skeleton={nodes.Wolf3D_Hair001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Head001"
//             geometry={nodes.Wolf3D_Head001.geometry}
//             material={materials.Wolf3D_Skin}
//             skeleton={nodes.Wolf3D_Head001.skeleton}
//             morphTargetDictionary={nodes.Wolf3D_Head001.morphTargetDictionary}
//             morphTargetInfluences={nodes.Wolf3D_Head001.morphTargetInfluences}
//           />
//           <skinnedMesh
//             name="Wolf3D_Outfit_Bottom001"
//             geometry={nodes.Wolf3D_Outfit_Bottom001.geometry}
//             material={materials.Wolf3D_Outfit_Bottom}
//             skeleton={nodes.Wolf3D_Outfit_Bottom001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Outfit_Footwear001"
//             geometry={nodes.Wolf3D_Outfit_Footwear001.geometry}
//             material={materials.Wolf3D_Outfit_Footwear}
//             skeleton={nodes.Wolf3D_Outfit_Footwear001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Outfit_Top001"
//             geometry={nodes.Wolf3D_Outfit_Top001.geometry}
//             material={materials.Wolf3D_Outfit_Top}
//             skeleton={nodes.Wolf3D_Outfit_Top001.skeleton}
//           />
//           <skinnedMesh
//             name="Wolf3D_Teeth001"
//             geometry={nodes.Wolf3D_Teeth001.geometry}
//             material={materials.Wolf3D_Teeth}
//             skeleton={nodes.Wolf3D_Teeth001.skeleton}
//             morphTargetDictionary={nodes.Wolf3D_Teeth001.morphTargetDictionary}
//             morphTargetInfluences={nodes.Wolf3D_Teeth001.morphTargetInfluences}
//           />
//           <primitive object={nodes.Hips} />
//         </group>
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/17.glb')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef ,useCallback,useEffect} from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/andyupdated23.glb')
  const { actions } = useAnimations(animations, group)
  console.log(animations)
  const handleAnimation = useCallback((animationName) => {
    if (!actions) return; // Ensure actions are available
    console.log("Animation name:", animationName);
    // Define animation names according to your GLB file
    const from = animationName === 'talk' ? 'Armature|mixamo.com|Layer0.005' : 'Armature|mixamo.com|Layer0';
    const to = animationName === 'talk' ? 'Armature|mixamo.com|Layer0' : 'Armature|mixamo.com|Layer0.004';

    // Check if actions exist and the specified animation is running
    if (actions[from] && actions[from].isRunning()) {
      actions[from].fadeOut(0.3);
    }

    // Reset, fade in, and play the target animation
    if (actions[to]) {
      actions[to].reset().fadeIn(0.5).play();
    } else {
      console.log(`Animation ${to} not found`);
    }
}, [actions]);

  
  useEffect(() => {
    handleAnimation(props.animationName);
  }, [props.animationName, handleAnimation]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" position={[1.292, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <skinnedMesh
            name="EyeLeft004"
            geometry={nodes.EyeLeft004.geometry}
            material={materials['Wolf3D_Eye.002']}
            skeleton={nodes.EyeLeft004.skeleton}
            morphTargetDictionary={nodes.EyeLeft004.morphTargetDictionary}
            morphTargetInfluences={nodes.EyeLeft004.morphTargetInfluences}
          />
          <skinnedMesh
            name="EyeRight005"
            geometry={nodes.EyeRight005.geometry}
            material={materials['Wolf3D_Eye.002']}
            skeleton={nodes.EyeRight005.skeleton}
            morphTargetDictionary={nodes.EyeRight005.morphTargetDictionary}
            morphTargetInfluences={nodes.EyeRight005.morphTargetInfluences}
          />
          <skinnedMesh
            name="Wolf3D_Body003"
            geometry={nodes.Wolf3D_Body003.geometry}
            material={materials['Wolf3D_Body.002']}
            skeleton={nodes.Wolf3D_Body003.skeleton}
          />
          <skinnedMesh
            name="Wolf3D_Glasses003"
            geometry={nodes.Wolf3D_Glasses003.geometry}
            material={materials['Wolf3D_Glasses.002']}
            skeleton={nodes.Wolf3D_Glasses003.skeleton}
          />
          <skinnedMesh
            name="Wolf3D_Hair004"
            geometry={nodes.Wolf3D_Hair004.geometry}
            material={materials['Wolf3D_Hair.002']}
            skeleton={nodes.Wolf3D_Hair004.skeleton}
          />
          <skinnedMesh
            name="Wolf3D_Head003"
            geometry={nodes.Wolf3D_Head003.geometry}
            material={materials['Wolf3D_Skin.002']}
            skeleton={nodes.Wolf3D_Head003.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Head003.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Head003.morphTargetInfluences}
          />
          <skinnedMesh
            name="Wolf3D_Outfit_Bottom004"
            geometry={nodes.Wolf3D_Outfit_Bottom004.geometry}
            material={materials['Wolf3D_Outfit_Bottom.002']}
            skeleton={nodes.Wolf3D_Outfit_Bottom004.skeleton}
          />
          <skinnedMesh
            name="Wolf3D_Outfit_Footwear004"
            geometry={nodes.Wolf3D_Outfit_Footwear004.geometry}
            material={materials['Wolf3D_Outfit_Footwear.002']}
            skeleton={nodes.Wolf3D_Outfit_Footwear004.skeleton}
          />
          <skinnedMesh
            name="Wolf3D_Outfit_Top003"
            geometry={nodes.Wolf3D_Outfit_Top003.geometry}
            material={materials['Wolf3D_Outfit_Top.002']}
            skeleton={nodes.Wolf3D_Outfit_Top003.skeleton}
          />
          <skinnedMesh
            name="Wolf3D_Teeth004"
            geometry={nodes.Wolf3D_Teeth004.geometry}
            material={materials['Wolf3D_Teeth.005']}
            skeleton={nodes.Wolf3D_Teeth004.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Teeth004.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Teeth004.morphTargetInfluences}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/andyupdated23.glb')